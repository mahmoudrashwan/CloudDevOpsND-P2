Description: >
    CloudDevOps NanoDegree Project 2 - Udagram - HA WebApp Cloudformation,
    This is the Network template to create Network Infra Stack.
    Created by: Mahmoud Rashwan | Email: m.rashwan32@gmail.com | April, 2020.

Parameters:
    EnvName:
        Description: Environment Name used by and whithin Stacks.
        Type: String
    VpcCidr:
        Description: Environment Name used by and whithin Stacks.
        Type: String
        Default: 10.0.0.0/16
    PublicSubnet1Cidr:
        Description: Public Subnet for AZ1
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2Cidr:
        Description: Public Subnet for AZ2
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1Cidr:
        Description: Private Subnet for AZ1
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2Cidr:
        Description: Private Subnet for AZ2
        Type: String
        Default: 10.0.3.0/24

Resources:
    Vpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCidr
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    IGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    IGWAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref IGW
            VpcId: !Ref Vpc
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref PublicSubnet1Cidr
            AvailabilityZone: !Select [0, !GetAZs '']
            MapPublicIpOnLaunch: true
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref PublicSubnet2Cidr
            AvailabilityZone: !Select [1, !GetAZs '']
            MapPublicIpOnLaunch: true
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref PrivateSubnet1Cidr
            AvailabilityZone: !Select [0, !GetAZs '']
            MapPublicIpOnLaunch: false
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: !Ref PrivateSubnet2Cidr
            AvailabilityZone: !Select [1, !GetAZs '']
            MapPublicIpOnLaunch: false
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    NGEIP1:
        Type: AWS::EC2::EIP
        DependsOn: IGWAttachment
        Properties:
            Domain: vpc
    NGEIP2:
        Type: AWS::EC2::EIP
        DependsOn: IGWAttachment
        Properties:
            Domain: vpc
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NGEIP1.AllocationId
            SubnetId: !Ref PublicSubnet1
    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NGEIP2.AllocationId
            SubnetId: !Ref PublicSubnet2
    PublicRT:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: IGWAttachment
        Properties:
            RouteTableId: !Ref PublicRT
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref IGW

    PublicSubnet1RTAssociaation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRT
            SubnetId: !Ref PublicSubnet1
    PublicSubnet2RTAssociaation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRT
            SubnetId: !Ref PublicSubnet2
    PrivateRT1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    DefaultPrivateRoute1:
          Type: AWS::EC2::Route
          Properties:
              RouteTableId: !Ref PrivateRT1  
              DestinationCidrBlock: 0.0.0.0/0
              NatGatewayId: !Ref NatGateway1
    PrivateSubnetRT1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRT1
            SubnetId: !Ref PrivateSubnet1
    PrivateRT2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref Vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvName
    DefaultPrivateRoute2:
          Type: AWS::EC2::Route
          Properties:
              RouteTableId: !Ref PrivateRT2
              DestinationCidrBlock: 0.0.0.0/0
              NatGatewayId: !Ref NatGateway2
    PrivateSubnetRT2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRT2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VpcEX:
        Description: VPC
        Value: !Ref Vpc
        Export:
            Name: !Sub ${EnvName}-VPC
    PublicSubnet1EX:
        Description: Pulic Subnet in AZ1
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvName}-PublicSubnet1
    PublicSubnet2EX:
        Description: Pulic Subnet in AZ2
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvName}-PublicSubnet2
    PublicSubnetsEX:
        Description: Pulic Subnets in AZ1 and AZ2.
        Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
        Export:
            Name: !Sub ${EnvName}-PublicSubnets
    PrivateSubnet1EX:
        Description: Private Subnet in AZ1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvName}-PrivateSubnet1
    PrivateSubnet2EX:
        Description: Private Subnet in AZ2
        Value: PrivateSubnet2
        Export:
            Name: !Sub ${EnvName}-PrivateSubnet2
    PrivateSubnetsEX:
        Description: Private Subnets in AZ1 and AZ2
        Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export:
            Name: !Sub ${EnvName}-PrivateSubnets
